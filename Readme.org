#+TITLE: iimacs (people macros)
* Ensure github keys are working
** Ensure you can login to github.com
** configure git
** generate a public_private keypair
   #+begin_src shell
     ssh-key-gen
   #+end_src
* Dependencies
  :PROPERTIES:
  :header-args: :noweb yes :tangle yes :comments org :eval never
  :END:
** Ubuntu 19.10 (or similar)
** emacs 26.X
   #+begin_src shell
     sudo apt install -y emacs #>26.0
   #+end_src
** kubectl / google-cloud-sdk

   https://kubernetes.io/docs/tasks/tools/install-kubectl/
*** ubuntu
   #+begin_src shell
     echo "deb [signed-by=/usr/share/keyrings/cloud.google.gpg] https://packages.cloud.google.com/apt cloud-sdk main" \
         | sudo tee -a /etc/apt/sources.list.d/google-cloud-sdk.list
     curl https://packages.cloud.google.com/apt/doc/apt-key.gpg \
         | sudo apt-key --keyring /usr/share/keyrings/cloud.google.gpg add -
     sudo apt update
     sudo apt install -y kubectl google-cloud-sdk
   #+end_src
*** osx
   #+begin_src shell
     curl -LO "https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/darwin/amd64/kubectl"
     chmod +x ./kubectl
     sudo mv ./kubectl /usr/local/bin/kubectl
   #+end_src
** golang 1.13
https://golang.org/dl/
   #+begin_src shell
     sudo add-apt-repository --yes ppa:longsleep/golang-backports
     sudo apt update
     sudo apt install -y golang golang-1.13
   #+end_src
** kind 0.5.1
   #+begin_src shell
     sudo curl -Lo /usr/local/bin/kind \
          https://github.com/kubernetes-sigs/kind/releases/download/v0.5.1/kind-$(uname)-amd64
     sudo chmod +x /usr/local/bin/kind
   #+end_src
** tmate 2.3.1
   #+begin_src shell
  curl -L \
   https://github.com/tmate-io/tmate/releases/download/2.3.1/tmate-2.3.1-static-linux-amd64.tar.gz \
   | sudo tar xvfzC - /usr/local/bin --strip-components 1
   #+end_src
** ripgrep 0.10.0
   #+begin_src shell
     sudo apt install -y ripgrep
   #+end_src
** xterm
   #+begin_src shell
     sudo apt install -y xterm xtermcontrol
   #+end_src
** docker
   #+begin_src tmate :shell :tangle docker.sh
     sudo apt-get remove docker docker-engine docker.io containerd runc
     sudo apt-get install \
          apt-transport-https \
          ca-certificates \
          curl \
          gnupg-agent \
          software-properties-common
     curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
     sudo add-apt-repository \
          "deb [arch=amd64] https://download.docker.com/linux/ubuntu \
        disco \
        stable"
     sudo apt-get update
     sudo apt-get install docker-ce docker-ce-cli containerd.io
     #export DOCKER_VERSION=5:19.03.3~3-0~ubuntu-disco
     #sudo apt-get install docker-ce=$DOCKER_VERISON docker-ce-cli=$DOCKER_VERSION containerd.io
   #+end_src

   #+RESULTS:

* OS Specific
** OSX
*** Installing emacs via brew and putting it in your path

   Source: [2019-11-16 Sat], [[https://apple.stackexchange.com/questions/229669/update-emacs-that-comes-with-os-x][macos - Update emacs that comes with OS X - Ask Different]]

   Apple controls when / if they update =emacs= so most people just install a newer version of the tool and change their PATH variable so the new version is found first and runs by default.

   If you like the sound of that, I recommend installing [[http://brew.sh/][Homebrew]]:

   #+BEGIN_SRC shell
     /usr/bin/ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"
   #+END_SRC

   Then install emacs by using d12frosted brew tap:

   #+BEGIN_SRC shell
     brew tap d12frosted/emacs-plus
     brew install emacs-plus
     #brew install emacs --with-cocoa --with-gnutls --with-librsvg --with-imagemagick@6 --with-mailutils
     #--HEAD
   #+END_SRC

   Add a link so that it'll work as =emacs= in the Terminal:

   #+BEGIN_SRC shell
     ln -s /usr/local/Cellar/emacs/26.3/Emacs.app /Applications
   #+END_SRC

   This will install the 'stable' version. As of this writing, that's 24.5:

   #+BEGIN_SRC shell
       » brew info emacs-plus
       emacs-plus: stable 26.3 (bottled), devel 25.0-dev, HEAD
       GNU Emacs text editor
       https://www.gnu.org/software/emacs/
   #+END_SRC

   This is significantly newer (24.5.1) than the version that came with El Capitan (22.1.1):

   #+BEGIN_SRC shell
       » emacs --version
       GNU Emacs 22.1.1
   #+END_SRC
  If we run this, the new version will be in the path first.

   #+begin_src shell
  sudo ln -sf /usr/local/Cellar/emacs/26.3/bin/* /usr/local/bin/
   #+end_src

* Get your terminal + emacs working
  :PROPERTIES:
  :header-args: :noweb yes :tangle yes :comments org
  :END:
** clone down iimacs .emacs.d into your system
  #+name: git clone --recursive ~/.emacs.d
  #+begin_src shell
  cd ~/ # do as your own user
  # mv ~/.emacs.d ~/.emacs.d.before-ii
  git clone --recursive https://github.com/iimacs/.emacs.d ~/.iimacs.d
  #+end_src
** populate the cache
   #+begin_src shell
     curl https://storage.googleapis.com/apisnoop/dev/iitoolbox-spacemacs-0.6.tgz \
         | tar xzfC - ~/.iimacs.d
   #+end_src
** ensure when you login, emacs can find .iimacs.d and tooling
This is done for all users, but has no impact unless ~/.iimacs.d exists
   #+begin_src shell
   cat <<EOF | sudo tee /etc/profile.d/99-iimacs.sh
   # Ensures the iitooling is avaliable and loaded by emacs
   export IIMACS=~/.iimacs.d
   export PATH=${IIMACS}/bin:${PATH}
   export EMACSLOADPATH=${IIMACS}:
   EOF
   #+end_src
** ensure when you login, emacs can find .iimacs.d and tooling
This is done for all users, but has no impact unless ~/.iimacs.d exists
   #+begin_src shell
   sudo adduser $USER docker
   #+end_src
** xterm font size and OS Code settings
  #+name: set xterm settings
  #+begin_src shell
  cp .emacs.d/.xterm-xdefaults ~/.Xdefaults
  # edit the above to your preferences ^^^
  # In particular the DPI is set to 180 for hidpi, 90 is good for older screens
  xrdb ~/.Xdefaults
  #+end_src
** tmate settings (including ESC timout)
  #+name: set tmux settings
  #+begin_src shell :results silent
    cat <<EOF >> ~/.tmate.conf
    set -s escape-time 0
    set-option -g set-clipboard on
    set-option -g mouse on
    set-option -g history-limit 50000
    EOF
  #+end_src

** docker group
  We need to login/logout in order for this to work OR use newgrp
  #+name: add user to docker group
  #+begin_src shell :results silent
    sudo adduser $USER docker
  #+end_src

* Possibly use ~/.emacs.d/.spacemacs-hh
You can have your own config, but I do a lot of work to keep mine happy.
It's not a bad starting spot.
  #+name: .spacemacs-$USER
  #+begin_src shell
    cp ~/.emacs.d/.spacemacs-hh ~/.emacs.d/.spacemacs-$USER
  #+end_src

* Usage
  #+begin_src shell
    iimacs ~/path/to/orgfile
  #+end_src
** run xterm
   #+name: apisnoop.sh
   #+begin_src shell :tangle no
     #!/bin/bash
     #/usr/local/bin/apisnoop.sh
     xterm -T $USER@sharing.io -e \
         ssh -tA $USER@sharing.io bash -l \
         '~/ii/org/start_osc52_session.sh'  '~/ii/apisnoop/' &
   #+end_src

   #+name: conformance-testing.sh
     #+begin_src shell :tangle no
     #/usr/local/bin/conformance-testing.sh
     #!/bin/bash
     xterm -T hh@sharing.io/conformance-testing -e \
           ssh -tA $USER@sharing.io bash -l \
           '~/ii/org/start_osc52_session.sh'  '~/ii/conformance-testing/' &
   #+end_src
